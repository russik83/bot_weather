import requests
from datetime import datetime
from config import api_token, url
from telegram import ParseMode, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ConversationHandler


def start(update, context):
    my_keyboard = ReplyKeyboardMarkup([['–ø–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å', '24 —á–∞—Å–∞']], resize_keyboard=True)
    update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {update.message.from_user.username} —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É?!',
                                reply_markup=my_keyboard)


def get_weather(update, context):
    update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')
    return WEATHER


def get_weather_daily(update, context):
    update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')
    return WEATHER_DAILY


def main_keyboard():
    return ReplyKeyboardMarkup([['–ø–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å', '24 —á–∞—Å–∞']], resize_keyboard=True)


def cancel(update, context):
    update.message.reply_text('–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é!')
    return ConversationHandler.END


def get_recommendation(data):
    if int(data['list'][0]['main']['temp']) < -30:
        return "–û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ, –æ–¥–µ–Ω—å—Å—è —Ç–µ–ø–ª–µ–µ!))"
    elif int(data['list'][0]['main']['temp']) < -10:
        return "–•–æ–ª–æ–¥–Ω–æ, –æ–¥–µ–Ω—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ!))"
    elif int(data['list'][0]['main']['temp']) < 10:
        return "–û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ, –æ–¥–µ–Ω—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ!))"
    elif int(data['list'][0]['main']['temp']) < 20:
        return "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ, –ª—É—á—à–µ –æ–¥–µ–Ω—å—Å—è!))"
    elif int(data['list'][0]['main']['temp']) < 25:
        return "–°–µ–π—á–∞—Å —Ç–µ–ø–ª–æ!"
    elif int(data['list'][0]['main']['temp']) > 40:
        return "–ù–µ —Ö–æ–ª–æ–¥–Ω–æ, —Ö–æ—Ç—å –≤ —à–æ—Ä—Ç–∞—Ö –∏–¥–∏!:)"


WEATHER = 1
WEATHER_DAILY = 2

def weather(update, context):
    city = update.message.text
    try:
        responce = requests.get(
            url,
            params={'q': city, 'type':'like','units': 'metric', 'appid': api_token, 'lang': 'ru'}
            )
        responce.raise_for_status()
        data = responce.json()
        recommendation = get_recommendation(data)

        update.message.reply_text(
        f"–ü–æ–≥–æ–¥–∞ –≤ {data['list'][0]['name']} : {int(data['list'][0]['main']['temp'])}üå°Ô∏è\n"
        f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {int(data['list'][0]['main']['feels_like'])}üå°Ô∏è\n"
        f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚¨áÔ∏è: {int(data['list'][0]['main']['temp_min'])}üå°Ô∏è\n"
        f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚¨ÜÔ∏è: {int(data['list'][0]['main']['temp_max'])}üå°Ô∏è\n"
        f"–î–∞–≤–ª–µ–Ω–∏–µ: {int(data['list'][0]['main']['pressure'])}–º–º —Ä—Ç. —Å—Ç.\n"
        f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {int(data['list'][0]['main']['humidity'])}%\n"
        f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {int(data['list'][0]['wind']['speed'])} –º/—Å\n"
        f"{(data['list'][0]['weather'][0]['description']).capitalize()}\n"
        f"{recommendation}",
        reply_markup=main_keyboard()
        )
    except(requests.RequestException):
        update.message.reply_text('–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
    except(ValueError, KeyError, IndexError):
        update.message.reply_text('–¢–∞–∫–æ–π –≥–æ—Ä–æ–¥ ' + city + ' –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return ConversationHandler.END

def weather_daily(update, context):
    city = update.message.text
    try:
        responce = requests.get(
            'http://api.openweathermap.org/data/2.5/forecast?&cnt=8',
            params={'q': city, 'type':'like','units': 'metric', 
                'appid': api_token, 'lang': 'ru', 'exclude': 'daily'}
            )
        responce.raise_for_status()
        data = responce.json() 
        for weather_block in data["list"]:
            weather_block["dt_txt"] = datetime.strptime(weather_block["dt_txt"], '%Y-%m-%d %H:%M:%S')
            hour = weather_block['dt_txt'].hour
            if hour == 6:
                morning = weather_block
            elif hour == 12:
                day = weather_block
            elif hour == 18:
                evening = weather_block
            elif hour == 0:
                night = weather_block
            
        morning = f"""<b>–ü–æ–≥–æ–¥–∞ —É—Ç—Ä–æ–º</b>
    –¢–µ–º–ø–µ—Ä–µ–∞—Ç—É—Ä–∞: {morning['main']['temp']}üå°Ô∏è
    –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {morning['main']['feels_like']}üå°Ô∏è
    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {morning['main']['temp_min']}üå°Ô∏è
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {morning['main']['temp_max']}üå°Ô∏è
    –î–∞–≤–ª–µ–Ω–∏–µ: {morning['main']['pressure']}–º–º —Ä—Ç. —Å—Ç.
    –í–ª–∞–∂–Ω–æ—Å—Ç—å: {morning['main']['humidity']}%
    –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {morning['wind']['speed']}–º/—Å
    <b><em>{(morning['weather'][0]['description']).upper()}</em></b>""" 
        day = f"""<b>–ü–æ–≥–æ–¥–∞ –¥–Ω—ë–º</b>
    –¢–µ–º–ø–µ—Ä–µ–∞—Ç—É—Ä–∞ {day['main']['temp']}üå°Ô∏è
    –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {day['main']['feels_like']}üå°Ô∏è
    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {day['main']['temp_min']}üå°Ô∏è
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {day['main']['temp_max']}üå°Ô∏è
    –î–∞–≤–ª–µ–Ω–∏–µ: {day['main']['pressure']}–º–º —Ä—Ç. —Å—Ç.
    –í–ª–∞–∂–Ω–æ—Å—Ç—å: {day['main']['humidity']}%
    –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {day['wind']['speed']}–º/—Å
    <b><em>{(day['weather'][0]['description']).upper()}</em></b>"""
        evening = f"""<b>–ü–æ–≥–æ–¥–∞ –≤–µ—á–µ—Ä–æ–º</b>
    –¢–µ–º–ø–µ—Ä–µ–∞—Ç—É—Ä–∞ {evening['main']['temp']}üå°Ô∏è
    –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {evening['main']['feels_like']}üå°Ô∏è
    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {evening['main']['temp_min']}üå°Ô∏è
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {evening['main']['temp_max']}üå°Ô∏è
    –î–∞–≤–ª–µ–Ω–∏–µ: {evening['main']['pressure']}–º–º —Ä—Ç. —Å—Ç.
    –í–ª–∞–∂–Ω–æ—Å—Ç—å: {evening['main']['humidity']}%
    –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {evening['wind']['speed']}–º/—Å
    <b><em>{(evening['weather'][0]['description']).upper()}</em></b>"""
        night = f"""<b>–ü–æ–≥–æ–¥–∞ –Ω–æ—á—å—é</b>
    –¢–µ–º–ø–µ—Ä–µ–∞—Ç—É—Ä–∞ {night['main']['temp']}üå°Ô∏è
    –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {night['main']['feels_like']}üå°Ô∏è
    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {night['main']['temp_min']}üå°Ô∏è
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {night['main']['temp_max']}üå°Ô∏è
    –î–∞–≤–ª–µ–Ω–∏–µ: {night['main']['pressure']}–º–º —Ä—Ç. —Å—Ç.
    –í–ª–∞–∂–Ω–æ—Å—Ç—å: {night['main']['humidity']}%
    –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {night['wind']['speed']}–º/—Å
    <b><em>{(night['weather'][0]['description']).upper()}</em></b>"""

        update.message.reply_text(
            f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 24 —á–∞—Å–∞: \n{morning}\n{day}\n{evening}\n{night}", 
            reply_markup=main_keyboard(), parse_mode=ParseMode.HTML
        )

    
    except(requests.RequestException):
        update.message.reply_text('–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
    except(ValueError, KeyError, IndexError):
        update.message.reply_text('–¢–∞–∫–æ–π –≥–æ—Ä–æ–¥ ' + city + ' –Ω–µ –Ω–∞–π–¥–µ–Ω')
        raise
    return ConversationHandler.END
